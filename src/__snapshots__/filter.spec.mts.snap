// Vitest Snapshot v1

exports[`parse > !a 1`] = `
[
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": true,
    "originalInput": "!a",
    "path": {
      "descendants": false,
      "value": ".:a",
    },
  },
]
`;

exports[`parse > * 1`] = `
[
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "*",
    "path": {
      "descendants": {
        "includeParent": true,
      },
      "value": ".",
    },
  },
]
`;

exports[`parse > *@* 1`] = `
[
  {
    "level": {
      "comp": "eq",
      "value": "*",
    },
    "negate": false,
    "originalInput": "*@*",
    "path": {
      "descendants": {
        "includeParent": true,
      },
      "value": ".",
    },
  },
]
`;

exports[`parse > *@1 1`] = `
[
  {
    "level": {
      "comp": "eq",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "*@1",
    "path": {
      "descendants": {
        "includeParent": true,
      },
      "value": ".",
    },
  },
]
`;

exports[`parse > , ,  a, 1`] = `
[
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "a",
    "path": {
      "descendants": false,
      "value": ".:a",
    },
  },
]
`;

exports[`parse > ,,a,b 1`] = `
[
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "a",
    "path": {
      "descendants": false,
      "value": ".:a",
    },
  },
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "b",
    "path": {
      "descendants": false,
      "value": ".:b",
    },
  },
]
`;

exports[`parse > . 1`] = `
[
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": ".",
    "path": {
      "descendants": false,
      "value": ".",
    },
  },
]
`;

exports[`parse > .:* 1`] = `
[
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": ".:*",
    "path": {
      "descendants": {
        "includeParent": true,
      },
      "value": ".",
    },
  },
]
`;

exports[`parse > .:*@1 1`] = `
[
  {
    "level": {
      "comp": "eq",
      "value": "trace",
    },
    "negate": false,
    "originalInput": ".:*@1",
    "path": {
      "descendants": {
        "includeParent": true,
      },
      "value": ".",
    },
  },
]
`;

exports[`parse > .::* 1`] = `
[
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": ".::*",
    "path": {
      "descendants": {
        "includeParent": false,
      },
      "value": ".",
    },
  },
]
`;

exports[`parse > .:a 1`] = `
[
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": ".:a",
    "path": {
      "descendants": false,
      "value": ".:a",
    },
  },
]
`;

exports[`parse > .:a:* 1`] = `
[
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": ".:a:*",
    "path": {
      "descendants": {
        "includeParent": true,
      },
      "value": ".:a",
    },
  },
]
`;

exports[`parse > .@* 1`] = `
[
  {
    "level": {
      "comp": "eq",
      "value": "*",
    },
    "negate": false,
    "originalInput": ".@*",
    "path": {
      "descendants": false,
      "value": ".",
    },
  },
]
`;

exports[`parse > a 1`] = `
[
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "a",
    "path": {
      "descendants": false,
      "value": ".:a",
    },
  },
]
`;

exports[`parse > a,b 1`] = `
[
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "a",
    "path": {
      "descendants": false,
      "value": ".:a",
    },
  },
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "b",
    "path": {
      "descendants": false,
      "value": ".:b",
    },
  },
]
`;

exports[`parse > a:b 1`] = `
[
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "a:b",
    "path": {
      "descendants": false,
      "value": ".:a:b",
    },
  },
]
`;

exports[`parse > a:b:* 1`] = `
[
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "a:b:*",
    "path": {
      "descendants": {
        "includeParent": true,
      },
      "value": ".:a:b",
    },
  },
]
`;

exports[`parse > a:b:*@info 1`] = `
[
  {
    "level": {
      "comp": "eq",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "a:b:*@1",
    "path": {
      "descendants": {
        "includeParent": true,
      },
      "value": ".:a:b",
    },
  },
]
`;

exports[`parse > app:* 1`] = `
[
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "app:*",
    "path": {
      "descendants": {
        "includeParent": true,
      },
      "value": ".:app",
    },
  },
]
`;

exports[`parse > app:*@* 1`] = `
[
  {
    "level": {
      "comp": "eq",
      "value": "*",
    },
    "negate": false,
    "originalInput": "app:*@*",
    "path": {
      "descendants": {
        "includeParent": true,
      },
      "value": ".:app",
    },
  },
]
`;

exports[`parse > app:*@1 1`] = `
[
  {
    "level": {
      "comp": "eq",
      "value": "*",
    },
    "negate": false,
    "originalInput": "app:*@*",
    "path": {
      "descendants": {
        "includeParent": true,
      },
      "value": ".:app",
    },
  },
]
`;

exports[`parse > app::* 1`] = `
[
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "app::*",
    "path": {
      "descendants": {
        "includeParent": false,
      },
      "value": ".:app",
    },
  },
]
`;

exports[`parse > app@* 1`] = `
[
  {
    "level": {
      "comp": "eq",
      "value": "*",
    },
    "negate": false,
    "originalInput": "app@*",
    "path": {
      "descendants": false,
      "value": ".:app",
    },
  },
]
`;

exports[`parse > app1 1`] = `
[
  {
    "level": {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "app1",
    "path": {
      "descendants": false,
      "value": ".:app1",
    },
  },
]
`;

exports[`parse syntax errors > ! 1`] = `
[
  [Error: Invalid filter pattern: "!"],
]
`;

exports[`parse syntax errors > ** 1`] = `
[
  [Error: Invalid filter pattern: "**"],
]
`;

exports[`parse syntax errors > *+ 1`] = `
[
  [Error: Invalid filter pattern: "*+"],
]
`;

exports[`parse syntax errors > *a 1`] = `
[
  [Error: Invalid filter pattern: "*a"],
]
`;

exports[`parse syntax errors > , 1`] = `
[
  [Error: Invalid filter pattern: ",. There must be at least one pattern present."],
]
`;

exports[`parse syntax errors > .. 1`] = `
[
  [Error: Invalid filter pattern: ".."],
]
`;

exports[`parse syntax errors > .a. 1`] = `
[
  [Error: Invalid filter pattern: ".a."],
]
`;

exports[`parse syntax errors > <empty> 1`] = `
[
  [Error: Invalid filter pattern: ". There must be at least one pattern present."],
]
`;

exports[`parse syntax errors > <whitespace> 1`] = `
[
  [Error: Invalid filter pattern: " . There must be at least one pattern present."],
]
`;

exports[`parse syntax errors > @ 1`] = `
[
  [Error: Invalid filter pattern: "@"],
]
`;

exports[`parse syntax errors > @1 1`] = `
[
  [Error: Invalid filter pattern: "@1"],
]
`;

exports[`parse syntax errors > a! 1`] = `
[
  [Error: Invalid filter pattern: "a!"],
]
`;

exports[`parse syntax errors > a+ 1`] = `
[
  [Error: Invalid filter pattern: "a+"],
]
`;

exports[`parse syntax errors > a. 1`] = `
[
  [Error: Invalid filter pattern: "a."],
]
`;

exports[`parse syntax errors > a:@1 1`] = `
[
  [Error: Invalid filter pattern: "a:@1"],
]
`;

exports[`parse syntax errors > a@ 1`] = `
[
  [Error: Invalid filter pattern: "a@"],
]
`;

exports[`parse syntax errors > a@*! 1`] = `
[
  [Error: Invalid filter pattern: "a@*!"],
]
`;

exports[`parse syntax errors > a@*+ 1`] = `
[
  [Error: Invalid filter pattern: "a@*+"],
]
`;

exports[`parse syntax errors > a@*- 1`] = `
[
  [Error: Invalid filter pattern: "a@*-"],
]
`;

exports[`parse syntax errors > a@+* 1`] = `
[
  [Error: Invalid filter pattern: "a@+*"],
]
`;

exports[`processLogFilterInput > renders log when invalid filter given > renders sensitive to 1 pattern 1 error 1`] = `
[
  [
    "Your log filter's pattern was invalid: \\"[31m![39m\\"

[1m[34mLOG FILTERING SYNTAX MANUAL  ‚üÅ[39m[22m
[1m[34m‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨[39m[22m

[1m[34mGrammar[39m[22m

    [!][[36m<root>[39m](*|[36m<path>[39m[:*])[@(*|([36m<levelNum>[39m|[36m<levelLabel>[39m)[+-])] [,<pattern>]

    [36m<root>[39m       = .
    [36m<path>[39m       = [90m/[39m^[A-z_]+[A-z_0-9]*$[90m/[39m [:<path>]
    [36m<levelNum>[39m   = 1     [90m|[39m 2     [90m|[39m 3    [90m|[39m 4    [90m|[39m 5     [90m|[39m 6
    [36m<levelLabel>[39m = trace [90m|[39m debug [90m|[39m info [90m|[39m warn [90m|[39m error [90m|[39m fatal

[1m[34mExamples[39m[22m

    All logs at...

    [1m[35mPath[39m[22m
    app         [90mapp path at default level[39m
    app:router  [90mapp:router path at default level[39m 

    [1m[35mList[39m[22m
    app,nexus   [90mapp and nexus paths at default level[39m

    [1m[35mPath Wildcard[39m[22m
    *           [90many path at default level[39m 
    app:*       [90mapp path plus descendants at defualt level[39m
    app::*      [90mapp path descendants at defualt level[39m

    [1m[35mNegation[39m[22m
    !app      [90many path at any level _except_ those at app path at default level[39m 
    !*        [90mno path (meaning, nothing will be logged)[39m 

    [1m[35mRemoval[39m[22m
    *,!app      [90many path at default level _except_ logs at app path at default level[39m 
    *,!*@2-     [90many path _except_ those at debug level or lower[39m 
    app,!app@4  [90mapp path at defualt level _except_ those at warn level[39m 

    [1m[35mLevels[39m[22m
    *@info      [90mall paths at info level[39m
    *@error-    [90mall paths at error level or lower[39m
    *@debug+    [90mall paths at debug level or higher[39m
    *@3         [90mall paths at info level[39m
    *@4-        [90mall paths at error level or lower[39m
    *@2+        [90mall paths at debug level or higher[39m
    app:*@2-    [90mapp path plus descendants at debug level or lower[39m 
    app::*@2+   [90mapp path descendants at debug level or higher[39m

    [1m[35mLevel Wildcard[39m[22m
    app@*       [90mapp path at all levels[39m
    *@*         [90mall paths at all levels[39m

    [1m[35mExplicit Root[39m[22m
    .           [90mroot path at defualt level[39m
    .@info      [90mroot path at info level[39m
    .:app       [90mSame as \\"app\\"[39m
    .:*         [90mSame as \\"*\\"[39m
  ",
  ],
]
`;

exports[`processLogFilterInput > renders log when invalid filter given > renders sensitive to n patterns <n errors 1`] = `
[
  [
    "Some (2) of the patterns in your log filter were invalid:

    [31m![39m
    [31m3[39m

[1m[34mLOG FILTERING SYNTAX MANUAL  ‚üÅ[39m[22m
[1m[34m‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨[39m[22m

[1m[34mGrammar[39m[22m

    [!][[36m<root>[39m](*|[36m<path>[39m[:*])[@(*|([36m<levelNum>[39m|[36m<levelLabel>[39m)[+-])] [,<pattern>]

    [36m<root>[39m       = .
    [36m<path>[39m       = [90m/[39m^[A-z_]+[A-z_0-9]*$[90m/[39m [:<path>]
    [36m<levelNum>[39m   = 1     [90m|[39m 2     [90m|[39m 3    [90m|[39m 4    [90m|[39m 5     [90m|[39m 6
    [36m<levelLabel>[39m = trace [90m|[39m debug [90m|[39m info [90m|[39m warn [90m|[39m error [90m|[39m fatal

[1m[34mExamples[39m[22m

    All logs at...

    [1m[35mPath[39m[22m
    app         [90mapp path at default level[39m
    app:router  [90mapp:router path at default level[39m 

    [1m[35mList[39m[22m
    app,nexus   [90mapp and nexus paths at default level[39m

    [1m[35mPath Wildcard[39m[22m
    *           [90many path at default level[39m 
    app:*       [90mapp path plus descendants at defualt level[39m
    app::*      [90mapp path descendants at defualt level[39m

    [1m[35mNegation[39m[22m
    !app      [90many path at any level _except_ those at app path at default level[39m 
    !*        [90mno path (meaning, nothing will be logged)[39m 

    [1m[35mRemoval[39m[22m
    *,!app      [90many path at default level _except_ logs at app path at default level[39m 
    *,!*@2-     [90many path _except_ those at debug level or lower[39m 
    app,!app@4  [90mapp path at defualt level _except_ those at warn level[39m 

    [1m[35mLevels[39m[22m
    *@info      [90mall paths at info level[39m
    *@error-    [90mall paths at error level or lower[39m
    *@debug+    [90mall paths at debug level or higher[39m
    *@3         [90mall paths at info level[39m
    *@4-        [90mall paths at error level or lower[39m
    *@2+        [90mall paths at debug level or higher[39m
    app:*@2-    [90mapp path plus descendants at debug level or lower[39m 
    app::*@2+   [90mapp path descendants at debug level or higher[39m

    [1m[35mLevel Wildcard[39m[22m
    app@*       [90mapp path at all levels[39m
    *@*         [90mall paths at all levels[39m

    [1m[35mExplicit Root[39m[22m
    .           [90mroot path at defualt level[39m
    .@info      [90mroot path at info level[39m
    .:app       [90mSame as \\"app\\"[39m
    .:*         [90mSame as \\"*\\"[39m
  ",
  ],
]
`;

exports[`processLogFilterInput > renders log when invalid filter given > renders sensitive to n patterns =n errors 1`] = `
[
  [
    "All of the patterns in your log filter were invalid:

    [31m![39m
    [31m3[39m

[1m[34mLOG FILTERING SYNTAX MANUAL  ‚üÅ[39m[22m
[1m[34m‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨[39m[22m

[1m[34mGrammar[39m[22m

    [!][[36m<root>[39m](*|[36m<path>[39m[:*])[@(*|([36m<levelNum>[39m|[36m<levelLabel>[39m)[+-])] [,<pattern>]

    [36m<root>[39m       = .
    [36m<path>[39m       = [90m/[39m^[A-z_]+[A-z_0-9]*$[90m/[39m [:<path>]
    [36m<levelNum>[39m   = 1     [90m|[39m 2     [90m|[39m 3    [90m|[39m 4    [90m|[39m 5     [90m|[39m 6
    [36m<levelLabel>[39m = trace [90m|[39m debug [90m|[39m info [90m|[39m warn [90m|[39m error [90m|[39m fatal

[1m[34mExamples[39m[22m

    All logs at...

    [1m[35mPath[39m[22m
    app         [90mapp path at default level[39m
    app:router  [90mapp:router path at default level[39m 

    [1m[35mList[39m[22m
    app,nexus   [90mapp and nexus paths at default level[39m

    [1m[35mPath Wildcard[39m[22m
    *           [90many path at default level[39m 
    app:*       [90mapp path plus descendants at defualt level[39m
    app::*      [90mapp path descendants at defualt level[39m

    [1m[35mNegation[39m[22m
    !app      [90many path at any level _except_ those at app path at default level[39m 
    !*        [90mno path (meaning, nothing will be logged)[39m 

    [1m[35mRemoval[39m[22m
    *,!app      [90many path at default level _except_ logs at app path at default level[39m 
    *,!*@2-     [90many path _except_ those at debug level or lower[39m 
    app,!app@4  [90mapp path at defualt level _except_ those at warn level[39m 

    [1m[35mLevels[39m[22m
    *@info      [90mall paths at info level[39m
    *@error-    [90mall paths at error level or lower[39m
    *@debug+    [90mall paths at debug level or higher[39m
    *@3         [90mall paths at info level[39m
    *@4-        [90mall paths at error level or lower[39m
    *@2+        [90mall paths at debug level or higher[39m
    app:*@2-    [90mapp path plus descendants at debug level or lower[39m 
    app::*@2+   [90mapp path descendants at debug level or higher[39m

    [1m[35mLevel Wildcard[39m[22m
    app@*       [90mapp path at all levels[39m
    *@*         [90mall paths at all levels[39m

    [1m[35mExplicit Root[39m[22m
    .           [90mroot path at defualt level[39m
    .@info      [90mroot path at info level[39m
    .:app       [90mSame as \\"app\\"[39m
    .:*         [90mSame as \\"*\\"[39m
  ",
  ],
]
`;

exports[`processLogFilterInput > renders log when invalid filter given > renders sensitive to n patterns 1 error 1`] = `
[
  [
    "One of the patterns in your log filter was invalid: \\"[31m![39m\\"

[1m[34mLOG FILTERING SYNTAX MANUAL  ‚üÅ[39m[22m
[1m[34m‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨[39m[22m

[1m[34mGrammar[39m[22m

    [!][[36m<root>[39m](*|[36m<path>[39m[:*])[@(*|([36m<levelNum>[39m|[36m<levelLabel>[39m)[+-])] [,<pattern>]

    [36m<root>[39m       = .
    [36m<path>[39m       = [90m/[39m^[A-z_]+[A-z_0-9]*$[90m/[39m [:<path>]
    [36m<levelNum>[39m   = 1     [90m|[39m 2     [90m|[39m 3    [90m|[39m 4    [90m|[39m 5     [90m|[39m 6
    [36m<levelLabel>[39m = trace [90m|[39m debug [90m|[39m info [90m|[39m warn [90m|[39m error [90m|[39m fatal

[1m[34mExamples[39m[22m

    All logs at...

    [1m[35mPath[39m[22m
    app         [90mapp path at default level[39m
    app:router  [90mapp:router path at default level[39m 

    [1m[35mList[39m[22m
    app,nexus   [90mapp and nexus paths at default level[39m

    [1m[35mPath Wildcard[39m[22m
    *           [90many path at default level[39m 
    app:*       [90mapp path plus descendants at defualt level[39m
    app::*      [90mapp path descendants at defualt level[39m

    [1m[35mNegation[39m[22m
    !app      [90many path at any level _except_ those at app path at default level[39m 
    !*        [90mno path (meaning, nothing will be logged)[39m 

    [1m[35mRemoval[39m[22m
    *,!app      [90many path at default level _except_ logs at app path at default level[39m 
    *,!*@2-     [90many path _except_ those at debug level or lower[39m 
    app,!app@4  [90mapp path at defualt level _except_ those at warn level[39m 

    [1m[35mLevels[39m[22m
    *@info      [90mall paths at info level[39m
    *@error-    [90mall paths at error level or lower[39m
    *@debug+    [90mall paths at debug level or higher[39m
    *@3         [90mall paths at info level[39m
    *@4-        [90mall paths at error level or lower[39m
    *@2+        [90mall paths at debug level or higher[39m
    app:*@2-    [90mapp path plus descendants at debug level or lower[39m 
    app::*@2+   [90mapp path descendants at debug level or higher[39m

    [1m[35mLevel Wildcard[39m[22m
    app@*       [90mapp path at all levels[39m
    *@*         [90mall paths at all levels[39m

    [1m[35mExplicit Root[39m[22m
    .           [90mroot path at defualt level[39m
    .@info      [90mroot path at info level[39m
    .:app       [90mSame as \\"app\\"[39m
    .:*         [90mSame as \\"*\\"[39m
  ",
  ],
]
`;

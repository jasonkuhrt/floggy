// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`filter LOG_FILTER envar config when invalid triggers readable log warning 1`] = `
[
  [
    "Your log filter's pattern found in environment variable LOG_FILTER. was invalid: "**"

LOG FILTERING SYNTAX MANUAL  ⟁
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬

Grammar

    [!][<root>](*|<path>[:*])[@(*|(<levelNum>|<levelLabel>)[+-])] [,<pattern>]

    <root>       = .
    <path>       = /^[A-z_]+[A-z_0-9]*$/ [:<path>]
    <levelNum>   = 1     | 2     | 3    | 4    | 5     | 6
    <levelLabel> = trace | debug | info | warn | error | fatal

Examples

    All logs at...

    Path
    app         app path at default level
    app:router  app:router path at default level 

    List
    app,nexus   app and nexus paths at default level

    Path Wildcard
    *           any path at default level 
    app:*       app path plus descendants at defualt level
    app::*      app path descendants at defualt level

    Negation
    !app      any path at any level _except_ those at app path at default level 
    !*        no path (meaning, nothing will be logged) 

    Removal
    *,!app      any path at default level _except_ logs at app path at default level 
    *,!*@2-     any path _except_ those at debug level or lower 
    app,!app@4  app path at defualt level _except_ those at warn level 

    Levels
    *@info      all paths at info level
    *@error-    all paths at error level or lower
    *@debug+    all paths at debug level or higher
    *@3         all paths at info level
    *@4-        all paths at error level or lower
    *@2+        all paths at debug level or higher
    app:*@2-    app path plus descendants at debug level or lower 
    app::*@2+   app path descendants at debug level or higher

    Level Wildcard
    app@*       app path at all levels
    *@*         all paths at all levels

    Explicit Root
    .           root path at defualt level
    .@info      root path at info level
    .:app       Same as "app"
    .:*         Same as "*"
  ",
  ],
]
`;

exports[`filter precedence considers instance time config first 1`] = `
[
  {
    "level": {
      "comp": "gte",
      "value": "debug",
    },
    "negate": false,
    "originalInput": "foo",
    "path": {
      "descendants": false,
      "value": ".:foo",
    },
  },
]
`;

exports[`filter precedence then considers LOG_FILTER env var 1`] = `
{
  "defaults": {
    "level": {
      "comp": "gte",
      "value": "debug",
    },
  },
  "originalInput": undefined,
  "patterns": [
    {
      "level": {
        "comp": "gte",
        "value": "debug",
      },
      "negate": false,
      "originalInput": "from_env_var",
      "path": {
        "descendants": false,
        "value": ".:from_env_var",
      },
    },
  ],
}
`;

exports[`filter precedence then considers construction time config 1`] = `
{
  "defaults": {
    "level": {
      "comp": "gte",
      "value": "debug",
    },
  },
  "originalInput": "*@fatal",
  "patterns": [
    {
      "level": {
        "comp": "eq",
        "value": "fatal",
      },
      "negate": false,
      "originalInput": "*@fatal",
      "path": {
        "descendants": {
          "includeParent": true,
        },
        "value": ".",
      },
    },
  ],
}
`;

exports[`filter precedence then defaults to "* 1`] = `
{
  "defaults": {
    "level": {
      "comp": "gte",
      "value": "debug",
    },
  },
  "originalInput": "*",
  "patterns": [
    {
      "level": {
        "comp": "gte",
        "value": "debug",
      },
      "negate": false,
      "originalInput": "*",
      "path": {
        "descendants": {
          "includeParent": true,
        },
        "value": ".",
      },
    },
  ],
}
`;
